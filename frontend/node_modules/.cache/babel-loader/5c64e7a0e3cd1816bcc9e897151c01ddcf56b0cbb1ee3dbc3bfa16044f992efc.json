{"ast":null,"code":"var _jsxFileName = \"/Users/cindylam/Desktop/practice-react/frontend/src/TextBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextBox() {\n  _s();\n  const [data, setData] = useState({\n    user: '',\n    title: '',\n    body: ''\n  });\n  const saveFormData = async () => {\n    const response = await fetch('http://localhost:4000/stories', {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n    if (response.status !== 200) {\n      throw new Error(`Request failed: ${response.status}`);\n    }\n  };\n  const onSubmit = async Event => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      action: \"http://localhost:4000/stories\",\n      id: \"WriteStoryForm\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"title\",\n        id: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        value: data.title,\n        required: true,\n        onChange: e => setData(...data, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"userName\",\n        id: \"userName\",\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userName\",\n        type: \"text\",\n        name: \"userName\",\n        value: data.user,\n        onChange: e => {\n          setData(...data, e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"storyBody\",\n        rows: \"4\",\n        cols: \"50\",\n        placeholder: \"Type Story Here\",\n        value: data.body,\n        onChange: e => {\n          setData(...data, e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Ready To Publish!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(TextBox, \"O9qxkIAzlrLRIjCUwrX4wz96qNU=\");\n_c = TextBox;\nexport default TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextBox","_s","data","setData","user","title","body","saveFormData","response","fetch","method","JSON","stringify","status","Error","onSubmit","Event","children","action","id","for","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","required","onChange","e","target","rows","cols","placeholder","_c","$RefreshReg$"],"sources":["/Users/cindylam/Desktop/practice-react/frontend/src/TextBox.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TextBox() {\n\n    const [data, setData] = useState({\n        user: '', title: '', body: ''\n    });\n\n    const saveFormData = async () => {\n        const response = await fetch('http://localhost:4000/stories', {\n            method: 'POST',\n            body: JSON.stringify(data)\n        });\n        if(response.status !== 200){\n            throw new Error(`Request failed: ${response.status}`);\n        }\n    }\n\n    const onSubmit = async (Event) => {\n        \n    }\n\n  return (\n    <div>\n        <form onSubmit={onSubmit} action= \"http://localhost:4000/stories\" id=\"WriteStoryForm\" method='POST'>\n            <label for=\"title\" id=\"title\">Title:</label>\n            <input \n                id=\"title\" \n                type=\"text\" \n                name=\"title\"\n                value={data.title}\n                required\n                onChange={(e) => setData(...data, e.target.value)}\n            />\n\n            <label for=\"userName\" id=\"userName\">User Name:</label>\n            <input \n                id=\"userName\" \n                type=\"text\" \n                name=\"userName\" \n                value={data.user}\n                onChange={(e) => {setData(...data, e.target.value)}}\n                required\n            />\n\n            <textarea \n                id=\"storyBody\" \n                rows=\"4\" \n                cols=\"50\" \n                placeholder='Type Story Here'\n                value={data.body}\n                onChange = {(e) => {setData(...data, e.target.value)}}\n                required></textarea>\n            <button>Ready To Publish!</button>\n        </form>\n    </div>\n  )\n}\n\nexport default TextBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}