{"ast":null,"code":"var _jsxFileName = \"/Users/cindylam/Desktop/practice-react/frontend/src/WriteStory.js\";\nimport React, { useState } from 'react';\nimport writeStoryCSS from './writeStory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WriteStory(props) {\n  var _s = $RefreshSig$();\n  function handleWriteStoryButton() {\n    _s();\n    //POST method\n\n    const [user, setUser] = useState('');\n    const [title, setTitle] = useState('');\n    const [storyBody, setStoryBody] = useState('');\n    const handleSubmit = async e => {\n      e.preventDefault();\n      const titleValue = document.getElementById(\"titleBox\");\n      const userValue = document.getElementById(\"userNameBox\");\n      const storyBoxValue = document.getElementById(\"storyBodyBox\");\n      const url = \"http://localhost:4000/\" + props.artURL;\n      console.log(url);\n      //\"http://localhost:4000/Cooling-Mist-Stories\"\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user,\n          title: title,\n          body: storyBody\n        })\n      }).then(res => {\n        return res.json();\n      }).then(data => console.log(data), alert('Submission successful!'), titleValue.value = \"\", userValue.value = \"\", storyBoxValue.value = \"\").catch(error => console.log(\"ERROR\"));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"titleLabel\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"titleBox\",\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          required: true,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"userNameLabel\",\n          children: \"User Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"userNameBox\",\n          type: \"text\",\n          name: \"userName\",\n          value: user,\n          onChange: e => setUser(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"storyBodyBox\",\n          rows: \"10\",\n          cols: \"120\",\n          placeholder: \"Type Story Here\",\n          value: storyBody,\n          onChange: e => setStoryBody(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"publishButton\",\n          children: \"Ready To Publish!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n  _s(handleWriteStoryButton, \"6yZyXfhuNSXco1crb9BnRBiFx7M=\");\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Write A Story\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n// function WriteStory(props) {\n//     //POST method\n\n//     const [user, setUser] = useState('');\n//     const [title, setTitle] = useState('');\n//     const [storyBody, setStoryBody] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault()\n//         const titleValue = document.getElementById(\"titleBox\");\n//         const userValue = document.getElementById(\"userNameBox\");\n//         const storyBoxValue = document.getElementById(\"storyBodyBox\");\n\n//         const url = \"http://localhost:4000/\" + props.artURL;\n//         console.log(url);\n// //\"http://localhost:4000/Cooling-Mist-Stories\"\n//         fetch(url, {\n//             method: \"POST\",\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 user: user,\n//                 title: title,\n//                 body: storyBody\n//             })\n//         }).then(res => {\n//             return res.json()\n//         })\n//         .then(\n//             data => console.log(data),\n//             alert('Submission successful!'),\n//             titleValue.value = \"\",\n//             userValue.value = \"\",\n//             storyBoxValue.value = \"\")\n//         .catch(error => console.log(\"ERROR\"))\n\n//     }\n\n//   return (\n//     <div>\n//         <form onSubmit={handleSubmit} >\n//             <label id=\"titleLabel\">Title:</label>\n//             <input \n//                 id=\"titleBox\" \n//                 type=\"text\" \n//                 name=\"title\"\n//                 value={title}\n//                 required\n//                 onChange={(e) => setTitle(e.target.value)}\n//             />\n\n//             <label id=\"userNameLabel\">User Name:</label>\n//             <input \n//                 id=\"userNameBox\" \n//                 type=\"text\" \n//                 name=\"userName\" \n//                 value={user}\n//                 onChange={(e) => setUser(e.target.value)}\n//                 required\n//             />\n\n//             <textarea \n//                 id=\"storyBodyBox\"\n//                 rows=\"10\"\n//                 cols=\"120\"\n//                 placeholder='Type Story Here'\n//                 value={storyBody}\n//                 onChange = {(e) => setStoryBody(e.target.value)}\n//                 required></textarea>\n//             <button id=\"publishButton\" >Ready To Publish!</button>\n//         </form>\n//     </div>\n//   )\n// }\n_c = WriteStory;\nexport default WriteStory;\nvar _c;\n$RefreshReg$(_c, \"WriteStory\");","map":{"version":3,"names":["React","useState","writeStoryCSS","jsxDEV","_jsxDEV","WriteStory","props","_s","$RefreshSig$","handleWriteStoryButton","user","setUser","title","setTitle","storyBody","setStoryBody","handleSubmit","e","preventDefault","titleValue","document","getElementById","userValue","storyBoxValue","url","artURL","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","alert","value","catch","error","children","onSubmit","id","fileName","_jsxFileName","lineNumber","columnNumber","type","name","required","onChange","target","rows","cols","placeholder","_c","$RefreshReg$"],"sources":["/Users/cindylam/Desktop/practice-react/frontend/src/WriteStory.js"],"sourcesContent":["import React, { useState } from 'react';\nimport writeStoryCSS from './writeStory.css';\n\n\nfunction WriteStory(props){\n\n    function handleWriteStoryButton(){\n            //POST method\n\n    const [user, setUser] = useState('');\n    const [title, setTitle] = useState('');\n    const [storyBody, setStoryBody] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const titleValue = document.getElementById(\"titleBox\");\n        const userValue = document.getElementById(\"userNameBox\");\n        const storyBoxValue = document.getElementById(\"storyBodyBox\");\n\n        const url = \"http://localhost:4000/\" + props.artURL;\n        console.log(url);\n//\"http://localhost:4000/Cooling-Mist-Stories\"\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: user,\n                title: title,\n                body: storyBody\n            })\n        }).then(res => {\n            return res.json()\n        })\n        .then(\n            data => console.log(data),\n            alert('Submission successful!'),\n            titleValue.value = \"\",\n            userValue.value = \"\",\n            storyBoxValue.value = \"\")\n        .catch(error => console.log(\"ERROR\"))\n\n    }\n\n  return (\n    <div>\n        <form onSubmit={handleSubmit} >\n            <label id=\"titleLabel\">Title:</label>\n            <input \n                id=\"titleBox\" \n                type=\"text\" \n                name=\"title\"\n                value={title}\n                required\n                onChange={(e) => setTitle(e.target.value)}\n            />\n\n            <label id=\"userNameLabel\">User Name:</label>\n            <input \n                id=\"userNameBox\" \n                type=\"text\" \n                name=\"userName\" \n                value={user}\n                onChange={(e) => setUser(e.target.value)}\n                required\n            />\n\n            <textarea \n                id=\"storyBodyBox\"\n                rows=\"10\"\n                cols=\"120\"\n                placeholder='Type Story Here'\n                value={storyBody}\n                onChange = {(e) => setStoryBody(e.target.value)}\n                required></textarea>\n            <button id=\"publishButton\" >Ready To Publish!</button>\n        </form>\n    </div>\n  )\n    }\n\n\n\n\n    return(\n        <button>Write A Story</button>\n    );\n\n}\n\n\n// function WriteStory(props) {\n//     //POST method\n\n//     const [user, setUser] = useState('');\n//     const [title, setTitle] = useState('');\n//     const [storyBody, setStoryBody] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault()\n//         const titleValue = document.getElementById(\"titleBox\");\n//         const userValue = document.getElementById(\"userNameBox\");\n//         const storyBoxValue = document.getElementById(\"storyBodyBox\");\n\n//         const url = \"http://localhost:4000/\" + props.artURL;\n//         console.log(url);\n// //\"http://localhost:4000/Cooling-Mist-Stories\"\n//         fetch(url, {\n//             method: \"POST\",\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 user: user,\n//                 title: title,\n//                 body: storyBody\n//             })\n//         }).then(res => {\n//             return res.json()\n//         })\n//         .then(\n//             data => console.log(data),\n//             alert('Submission successful!'),\n//             titleValue.value = \"\",\n//             userValue.value = \"\",\n//             storyBoxValue.value = \"\")\n//         .catch(error => console.log(\"ERROR\"))\n\n//     }\n\n//   return (\n//     <div>\n//         <form onSubmit={handleSubmit} >\n//             <label id=\"titleLabel\">Title:</label>\n//             <input \n//                 id=\"titleBox\" \n//                 type=\"text\" \n//                 name=\"title\"\n//                 value={title}\n//                 required\n//                 onChange={(e) => setTitle(e.target.value)}\n//             />\n\n//             <label id=\"userNameLabel\">User Name:</label>\n//             <input \n//                 id=\"userNameBox\" \n//                 type=\"text\" \n//                 name=\"userName\" \n//                 value={user}\n//                 onChange={(e) => setUser(e.target.value)}\n//                 required\n//             />\n\n//             <textarea \n//                 id=\"storyBodyBox\"\n//                 rows=\"10\"\n//                 cols=\"120\"\n//                 placeholder='Type Story Here'\n//                 value={storyBody}\n//                 onChange = {(e) => setStoryBody(e.target.value)}\n//                 required></textarea>\n//             <button id=\"publishButton\" >Ready To Publish!</button>\n//         </form>\n//     </div>\n//   )\n// }\n\nexport default WriteStory;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}