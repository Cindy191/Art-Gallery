{"ast":null,"code":"var _jsxFileName = \"/Users/cindylam/Desktop/practice-react/frontend/src/TextBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextBox() {\n  _s();\n  const [user, setUser] = useState('');\n  const [title, setTitle] = useState('');\n  const [storyBody, setStoryBody] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // try {\n    //     let res = await fetch(\"http://localhost:4000/stories\", {\n    //         method: \"POST\",\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             user: user,\n    //             title: title,\n    //             body: storyBody\n    //         })\n    //     });\n    //     await res.json();\n    //     console.log(res);\n    //     if(res.status === 200){\n    //         setUser(\"\");\n    //         setTitle(\"\");\n    //         setStoryBody(\"\");\n    //     }\n    //     else{\n    //         console.log(\"Error occured in handleSubmit function\");\n    //     }\n    // } catch (error) {\n    //     console.log(error);\n    // }\n\n    fetch(\"http:localhost:4000/stories\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: user,\n        title: title,\n        body: storyBody\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"title\",\n        id: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        required: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"userName\",\n        id: \"userName\",\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userName\",\n        type: \"text\",\n        name: \"userName\",\n        value: user,\n        onChange: e => setUser(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"storyBody\",\n        rows: \"4\",\n        cols: \"50\",\n        placeholder: \"Type Story Here\",\n        value: storyBody,\n        onChange: e => setStoryBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Ready To Publish!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TextBox, \"6yZyXfhuNSXco1crb9BnRBiFx7M=\");\n_c = TextBox;\nexport default TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextBox","_s","user","setUser","title","setTitle","storyBody","setStoryBody","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","children","onSubmit","for","id","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","required","onChange","target","rows","cols","placeholder","_c","$RefreshReg$"],"sources":["/Users/cindylam/Desktop/practice-react/frontend/src/TextBox.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TextBox() {\n\n    const [user, setUser] = useState('');\n    const [title, setTitle] = useState('');\n    const [storyBody, setStoryBody] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        // try {\n        //     let res = await fetch(\"http://localhost:4000/stories\", {\n        //         method: \"POST\",\n        //         headers: {\n        //             'Content-Type': 'application/json'\n        //         },\n        //         body: JSON.stringify({\n        //             user: user,\n        //             title: title,\n        //             body: storyBody\n        //         })\n        //     });\n        //     await res.json();\n        //     console.log(res);\n        //     if(res.status === 200){\n        //         setUser(\"\");\n        //         setTitle(\"\");\n        //         setStoryBody(\"\");\n        //     }\n        //     else{\n        //         console.log(\"Error occured in handleSubmit function\");\n        //     }\n        // } catch (error) {\n        //     console.log(error);\n        // }\n\n        fetch(\"http:localhost:4000/stories\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: user,\n                title: title,\n                body: storyBody\n            })\n        })\n    }\n\n  return (\n    <div>\n        <form onSubmit={handleSubmit} >\n            <label for=\"title\" id=\"title\">Title:</label>\n            <input \n                id=\"title\" \n                type=\"text\" \n                name=\"title\"\n                value={title}\n                required\n                onChange={(e) => setTitle(e.target.value)}\n            />\n\n            <label for=\"userName\" id=\"userName\">User Name:</label>\n            <input \n                id=\"userName\" \n                type=\"text\" \n                name=\"userName\" \n                value={user}\n                onChange={(e) => setUser(e.target.value)}\n                required\n            />\n\n            <textarea \n                id=\"storyBody\" \n                rows=\"4\" \n                cols=\"50\" \n                placeholder='Type Story Here'\n                value={storyBody}\n                onChange = {(e) => setStoryBody(e.target.value)}\n                required></textarea>\n            <button>Ready To Publish!</button>\n            <p>{title}</p>\n        </form>\n    </div>\n  )\n}\n\nexport default TextBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}